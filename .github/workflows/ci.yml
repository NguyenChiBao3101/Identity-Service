name: CI/CD Pipeline with ZAP Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-zap:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 310115cb@
          MYSQL_DATABASE: identity_service
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -p310115cb@"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Run Spring Boot app
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/identity_service
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: 310115cb@
          JWT_SIGNER_KEY: ${{ secrets.JWT_SIGNER_KEY }}
        run: nohup ./mvnw spring-boot:run > spring.log 2>&1 &

      - name: Wait for Spring Boot to be ready
        run: |
          for i in {1..45}; do
            if nc -z localhost 8386; then
              echo "Spring Boot started"
              break
            fi
            sleep 3
          done

      - name: Print Spring Boot log
        run: cat spring.log || true

      - name: Run ZAP Automation Framework via Docker
        run: |
          docker run --network=host -v ${{ github.workspace }}:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap.sh \
            -addoninstall openapi \
            -cmd -autorun /zap/wrk/zap-automation.yml

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html